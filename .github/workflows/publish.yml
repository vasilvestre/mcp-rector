name: Publish to npm and GitHub Packages

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js for npm
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Type check
        run: npm run typecheck --if-present

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Check version change
        id: version_check
        run: |
          git fetch origin main --depth=2
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PREVIOUS_VERSION=$(git show origin/main~1:package.json 2>/dev/null | node -p "JSON.parse(require('fs').readFileSync(0, 'utf-8')).version" || echo "0.0.0")
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi

      - name: Publish to npm
        if: steps.version_check.outputs.version_changed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node.js for GitHub Packages
        if: steps.version_check.outputs.version_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@vsilvestre'

      - name: Publish to GitHub Packages
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          # Create temporary package.json with GitHub scope
          node -e "
            const pkg = require('./package.json');
            pkg.name = '@vsilvestre/mcp-rector';
            pkg.publishConfig = {
              registry: 'https://npm.pkg.github.com'
            };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore original package.json
        if: always() && steps.version_check.outputs.version_changed == 'true'
        run: git checkout package.json

      - name: Create git tag
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
